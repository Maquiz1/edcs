# Generated by Django 3.1.7 on 2022-05-18 08:26

import _socket
from django.conf import settings
import django.contrib.sites.managers
from django.db import migrations, models
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_revision.revision_field
import edcs_model.models.validators.date
import edcs_utils.date
import edcs_visit_schedule.managers
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('edcs_subject', '0023_auto_20220518_0230'),
    ]

    operations = [
        migrations.AlterField(
            model_name='covidinfectionhistory',
            name='swab_test_results',
            field=models.CharField(choices=[('POS_TEST', 'One or more positive test(s) '), ('NEG_TEST', 'One or more negative tests, but none were positive'), ('all_test_failed', 'All tests failed'), ('waiting_results', 'Waiting for all results'), ('N/A', 'Not applicable')], default='N/A', max_length=45, verbose_name='If yes, What was the result/were the results of all swab tests you’ve had?'),
        ),
        migrations.AlterField(
            model_name='historicalcovidinfectionhistory',
            name='swab_test_results',
            field=models.CharField(choices=[('POS_TEST', 'One or more positive test(s) '), ('NEG_TEST', 'One or more negative tests, but none were positive'), ('all_test_failed', 'All tests failed'), ('waiting_results', 'Waiting for all results'), ('N/A', 'Not applicable')], default='N/A', max_length=45, verbose_name='If yes, What was the result/were the results of all swab tests you’ve had?'),
        ),
        migrations.AlterField(
            model_name='historicalhivlabinvestigation',
            name='hiv_status',
            field=models.CharField(choices=[('HIV_POS', 'HIV positive'), ('HIV_NEG', 'HIV negative'), ('inconclusive_results', 'Inconclusive results')], max_length=45, verbose_name='If the patient’s status is unknown or Negative, tested more than two months ago, please counsel the patient (Provider initiated HIV counseling and testing) and take blood for HIV testing.'),
        ),
        migrations.AlterField(
            model_name='historicallabparta',
            name='hiv_rapid_test',
            field=models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative')], max_length=45, verbose_name='HIV rapid test'),
        ),
        migrations.AlterField(
            model_name='historicallabparta',
            name='tb_test_result',
            field=models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate')], max_length=45, verbose_name='TB Test Results?'),
        ),
        migrations.AlterField(
            model_name='hivlabinvestigation',
            name='hiv_status',
            field=models.CharField(choices=[('HIV_POS', 'HIV positive'), ('HIV_NEG', 'HIV negative'), ('inconclusive_results', 'Inconclusive results')], max_length=45, verbose_name='If the patient’s status is unknown or Negative, tested more than two months ago, please counsel the patient (Provider initiated HIV counseling and testing) and take blood for HIV testing.'),
        ),
        migrations.AlterField(
            model_name='labparta',
            name='hiv_rapid_test',
            field=models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative')], max_length=45, verbose_name='HIV rapid test'),
        ),
        migrations.AlterField(
            model_name='labparta',
            name='tb_test_result',
            field=models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative'), ('IND', 'Indeterminate')], max_length=45, verbose_name='TB Test Results?'),
        ),
        migrations.CreateModel(
            name='LabPartC',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('crf_status', models.CharField(choices=[('INCOMPLETE', 'Incomplete (some data pending)'), ('COMPLETE', 'Complete')], default='INCOMPLETE', help_text='If some data is still pending, flag this CRF as incomplete', max_length=25, verbose_name='CRF status')),
                ('crf_status_comments', models.TextField(blank=True, help_text='for example, why some data is still pending', null=True, verbose_name='Any comments related to status of this CRF')),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edcs_utils.date.get_utcnow, help_text='Date and time of report.', validators=[edcs_model.models.validators.date.datetime_not_future], verbose_name='Report Date and Time')),
                ('histological_dx', models.TextField(verbose_name='Histological diagnosis')),
                ('measurements', models.TextField(verbose_name='Measurements')),
                ('consistency', models.TextField(max_length=500, verbose_name='Consistency')),
                ('color', models.CharField(max_length=45, verbose_name='Color')),
                ('microscopic_findings', models.TextField(blank=True, max_length=500, null=True, verbose_name='Microscopic findings')),
                ('immunohistochemistry', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative')], max_length=45, verbose_name='Immunohistochemistry')),
                ('histochemistry', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative')], max_length=45, verbose_name='Histochemistry')),
                ('type_lung_ca', models.CharField(choices=[('small_cell', 'Small cel'), ('non_small_cell', 'Non-small cell')], max_length=45, verbose_name='Type of lung Cancer?')),
                ('non_small_cell', models.CharField(choices=[('adenocarcinoma', 'Adenocarcinoma'), ('squamous_cell_carcinomas', 'Squamous cell carcinomas'), ('large_cell_carcinomas', 'Large cell carcinomas')], max_length=45, verbose_name='If non-small cell')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='sites.site')),
                ('subject_visit', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='edcs_subject.subjectvisit')),
            ],
            options={
                'verbose_name': 'Lab Part C',
                'verbose_name_plural': 'Lab Part C',
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
            managers=[
                ('on_site', django.contrib.sites.managers.CurrentSiteManager()),
                ('objects', edcs_visit_schedule.managers.CrfModelManager()),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalLabPartC',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('crf_status', models.CharField(choices=[('INCOMPLETE', 'Incomplete (some data pending)'), ('COMPLETE', 'Complete')], default='INCOMPLETE', help_text='If some data is still pending, flag this CRF as incomplete', max_length=25, verbose_name='CRF status')),
                ('crf_status_comments', models.TextField(blank=True, help_text='for example, why some data is still pending', null=True, verbose_name='Any comments related to status of this CRF')),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(default=edcs_utils.date.get_utcnow, help_text='Date and time of report.', validators=[edcs_model.models.validators.date.datetime_not_future], verbose_name='Report Date and Time')),
                ('histological_dx', models.TextField(verbose_name='Histological diagnosis')),
                ('measurements', models.TextField(verbose_name='Measurements')),
                ('consistency', models.TextField(max_length=500, verbose_name='Consistency')),
                ('color', models.CharField(max_length=45, verbose_name='Color')),
                ('microscopic_findings', models.TextField(blank=True, max_length=500, null=True, verbose_name='Microscopic findings')),
                ('immunohistochemistry', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative')], max_length=45, verbose_name='Immunohistochemistry')),
                ('histochemistry', models.CharField(choices=[('POS', 'Positive'), ('NEG', 'Negative')], max_length=45, verbose_name='Histochemistry')),
                ('type_lung_ca', models.CharField(choices=[('small_cell', 'Small cel'), ('non_small_cell', 'Non-small cell')], max_length=45, verbose_name='Type of lung Cancer?')),
                ('non_small_cell', models.CharField(choices=[('adenocarcinoma', 'Adenocarcinoma'), ('squamous_cell_carcinomas', 'Squamous cell carcinomas'), ('large_cell_carcinomas', 'Large cell carcinomas')], max_length=45, verbose_name='If non-small cell')),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
                ('subject_visit', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edcs_subject.subjectvisit')),
            ],
            options={
                'verbose_name': 'historical Lab Part C',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
