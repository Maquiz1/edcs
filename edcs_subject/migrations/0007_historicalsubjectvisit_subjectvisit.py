# Generated by Django 3.1.7 on 2022-01-21 09:47

import _socket
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_revision.revision_field
import edcs_model.fields.other_charfield
import edcs_model.models.fields.other_charfield
import edcs_model.models.validators.date
import edcs_protocol.validators
import edcs_subject.models.subject_visit
import edcs_utils.date
import edcs_visit_schedule.managers
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('edcs_appointment', '0004_auto_20220121_0947'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
        ('edcs_subject', '0006_historicalairpollutionfollowup_historicalalcoholtobaccouse_historicalcontraceptiveusereproductivehis'),
    ]

    operations = [
        migrations.CreateModel(
            name='SubjectVisit',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=50)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('visit_schedule_name', models.CharField(editable=False, help_text='the name of the visit schedule used to find the "schedule"', max_length=25)),
                ('schedule_name', models.CharField(editable=False, max_length=25)),
                ('visit_code', models.CharField(editable=False, max_length=25, null=True)),
                ('visit_code_sequence', models.IntegerField(blank=True, default=0, help_text='An integer to represent the sequence of additional appointments relative to the base appointment, 0, needed to complete data collection for the timepoint. (NNNN.0)', null=True, verbose_name='Sequence')),
                ('report_datetime', models.DateTimeField(default=edcs_utils.date.get_utcnow, help_text='Date and time of this report', validators=[edcs_protocol.validators.datetime_not_before_study_start, edcs_model.models.validators.date.datetime_not_future], verbose_name='Report date and time')),
                ('reason_unscheduled_other', edcs_model.fields.other_charfield.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If the reason for the unscheduled visit is "other", specify')),
                ('reason_missed', models.CharField(blank=True, max_length=35, null=True, verbose_name="If 'missed', provide the reason for the missed visit")),
                ('reason_missed_other', edcs_model.fields.other_charfield.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If the reason for the missed visit is "other", specify')),
                ('study_status', models.CharField(max_length=50, null=True, verbose_name="What is the participant's current study status")),
                ('require_crfs', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=10, verbose_name='Are scheduled data being submitted with this visit?')),
                ('info_source_other', edcs_model.fields.other_charfield.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If "Other" source of information, specify')),
                ('survival_status', models.CharField(choices=[('alive', 'Alive'), ('dead', 'Deceased'), ('unknown', 'Unknown')], default='alive', max_length=10, null=True, verbose_name="Participant's survival status")),
                ('last_alive_date', models.DateField(blank=True, null=True, validators=[edcs_protocol.validators.date_not_before_study_start, edcs_model.models.validators.date.date_not_future], verbose_name='Date participant last known alive')),
                ('comments', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment if any additional pertinent information about the participant')),
                ('reason', models.CharField(choices=[('scheduled', 'Scheduled visit (study)'), ('unscheduled', 'Routine / Unscheduled visit (non-study)'), ('missed', 'Missed visit')], max_length=25, verbose_name='What is the reason for this visit report?')),
                ('reason_unscheduled', models.CharField(choices=[('routine_non_study', 'Routine appointment (non-study)'), ('patient_unwell_outpatient', 'Patient unwell'), ('drug_refill', 'Drug refill only'), ('OTHER', 'Other'), ('N/A', 'Not applicable')], default='N/A', max_length=25, verbose_name="If 'unscheduled', provide reason for the unscheduled visit")),
                ('clinic_services_other', edcs_model.models.fields.other_charfield.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If other, please specify ...')),
                ('info_source', models.CharField(choices=[('patient', 'Patient'), ('patient_and_outpatient', 'Patient, hospital notes and/or outpatient card'), ('patient_representive', 'Patient Representative (e.family member, friend)'), ('hospital_notes', 'Hospital notes'), ('outpatient_cards', 'Outpatient cards'), ('collateral_history', 'Collateral History from relative/guardian'), ('N/A', 'Not applicable'), ('OTHER', 'Other')], max_length=25, verbose_name='What is the main source of this information?')),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='edcs_appointment.appointment')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='sites.site')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
            managers=[
                ('on_site', edcs_subject.models.subject_visit.CurrentSiteManager()),
                ('objects', edcs_visit_schedule.managers.VisitModelManager()),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalSubjectVisit',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('subject_identifier', models.CharField(max_length=50)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('visit_schedule_name', models.CharField(editable=False, help_text='the name of the visit schedule used to find the "schedule"', max_length=25)),
                ('schedule_name', models.CharField(editable=False, max_length=25)),
                ('visit_code', models.CharField(editable=False, max_length=25, null=True)),
                ('visit_code_sequence', models.IntegerField(blank=True, default=0, help_text='An integer to represent the sequence of additional appointments relative to the base appointment, 0, needed to complete data collection for the timepoint. (NNNN.0)', null=True, verbose_name='Sequence')),
                ('report_datetime', models.DateTimeField(default=edcs_utils.date.get_utcnow, help_text='Date and time of this report', validators=[edcs_protocol.validators.datetime_not_before_study_start, edcs_model.models.validators.date.datetime_not_future], verbose_name='Report date and time')),
                ('reason_unscheduled_other', edcs_model.fields.other_charfield.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If the reason for the unscheduled visit is "other", specify')),
                ('reason_missed', models.CharField(blank=True, max_length=35, null=True, verbose_name="If 'missed', provide the reason for the missed visit")),
                ('reason_missed_other', edcs_model.fields.other_charfield.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If the reason for the missed visit is "other", specify')),
                ('study_status', models.CharField(max_length=50, null=True, verbose_name="What is the participant's current study status")),
                ('require_crfs', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=10, verbose_name='Are scheduled data being submitted with this visit?')),
                ('info_source_other', edcs_model.fields.other_charfield.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If "Other" source of information, specify')),
                ('survival_status', models.CharField(choices=[('alive', 'Alive'), ('dead', 'Deceased'), ('unknown', 'Unknown')], default='alive', max_length=10, null=True, verbose_name="Participant's survival status")),
                ('last_alive_date', models.DateField(blank=True, null=True, validators=[edcs_protocol.validators.date_not_before_study_start, edcs_model.models.validators.date.date_not_future], verbose_name='Date participant last known alive')),
                ('comments', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment if any additional pertinent information about the participant')),
                ('reason', models.CharField(choices=[('scheduled', 'Scheduled visit (study)'), ('unscheduled', 'Routine / Unscheduled visit (non-study)'), ('missed', 'Missed visit')], max_length=25, verbose_name='What is the reason for this visit report?')),
                ('reason_unscheduled', models.CharField(choices=[('routine_non_study', 'Routine appointment (non-study)'), ('patient_unwell_outpatient', 'Patient unwell'), ('drug_refill', 'Drug refill only'), ('OTHER', 'Other'), ('N/A', 'Not applicable')], default='N/A', max_length=25, verbose_name="If 'unscheduled', provide reason for the unscheduled visit")),
                ('clinic_services_other', edcs_model.models.fields.other_charfield.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If other, please specify ...')),
                ('info_source', models.CharField(choices=[('patient', 'Patient'), ('patient_and_outpatient', 'Patient, hospital notes and/or outpatient card'), ('patient_representive', 'Patient Representative (e.family member, friend)'), ('hospital_notes', 'Hospital notes'), ('outpatient_cards', 'Outpatient cards'), ('collateral_history', 'Collateral History from relative/guardian'), ('N/A', 'Not applicable'), ('OTHER', 'Other')], max_length=25, verbose_name='What is the main source of this information?')),
                ('history_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('appointment', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edcs_appointment.appointment')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'historical subject visit',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
