# Generated by Django 3.1.7 on 2021-11-21 09:21

import _socket
from django.db import migrations, models
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_revision.revision_field
import edcs_utils.date


class Migration(migrations.Migration):

    dependencies = [
        ('edcs_subject', '0002_auto_20211121_0621'),
    ]

    operations = [
        migrations.CreateModel(
            name='HouseKitchenSurrounding',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(default=edcs_utils.date.get_utcnow, help_text='Date and time of report.', verbose_name='Report Date and Time')),
                ('material_floor', models.CharField(choices=[('earth_sand_clay_mud_dung', 'Earth/sand/clay/mud/dung'), ('wood', 'Wood'), ('ceramic_tiles_vinyl', 'Ceramic tiles or vinyl'), ('cement_concrete', 'Cement/concrete'), ('other', 'Other')], max_length=45, verbose_name='What is the main material of the floor of the dwelling?')),
                ('material_roof', models.CharField(choices=[('no_roof', 'No roof'), ('thatch_straw', 'Thatch/straw'), ('mud', 'Mud'), ('metal', 'Metal'), ('wood', 'Wood'), ('brick', 'Brick'), ('tiles', 'Tiles'), ('slate', 'Slate'), ('other', 'Others')], max_length=45, verbose_name='What is the main material of the roof of the dwelling?')),
                ('material_interior_wall', models.CharField(choices=[('no_walls', 'No walls'), ('mud', 'Mud'), ('wood', 'Wood'), ('cement_concrete', 'Cement/concrete'), ('stone', 'Stone'), ('metal', 'Metal'), ('other', 'Others')], max_length=125, verbose_name='What is the main material of the interior walls of the dwelling?')),
                ('material_exterior_wall', models.CharField(choices=[('no_walls', 'No walls'), ('mud', 'Mud'), ('wood', 'Wood'), ('cement_concrete', 'Cement/concrete'), ('stone', 'Stone'), ('metal', 'Metal'), ('other', 'Others')], max_length=15, verbose_name='What is the main material of the exterior walls of the dwelling?')),
                ('inside_swept', models.CharField(choices=[('daily', 'Daily'), ('two_day_week', 'Two days a week'), ('three_day_week', 'Three days a week'), ('four', 'Four'), ('five', 'Five'), ('six', 'Six'), ('weekly', 'Weekly (i.e., once in 7 days)'), ('monthly', 'Monthly'), ('less_one_month', 'Less than once a month'), ('never', 'Never')], max_length=125, verbose_name='How often is the inside of the dwelling swept?')),
                ('material_kitchen_floor', models.CharField(choices=[('earth_sand_clay_mud_dung', 'Earth/sand/clay/mud/dung'), ('wood', 'Wood'), ('ceramic_tiles_vinyl', 'Ceramic tiles or vinyl'), ('cement_concrete', 'Cement/concrete'), ('other', 'Other')], max_length=125, verbose_name='What is the main material of the kitchen floor?')),
                ('material_kitchen_roof', models.CharField(choices=[('no_roof', 'No roof'), ('thatch_straw', 'Thatch/straw'), ('mud', 'Mud'), ('metal', 'Metal'), ('wood', 'Wood'), ('brick', 'Brick'), ('tiles', 'Tiles'), ('slate', 'Slate'), ('other', 'Other')], max_length=125, verbose_name='What is the main material of the kitchen roof?')),
                ('material_interior_wall_kitchen', models.CharField(choices=[('no_roof', 'No roof'), ('thatch_straw', 'Thatch/straw'), ('mud', 'Mud'), ('metal', 'Metal'), ('wood', 'Wood'), ('brick', 'Brick'), ('tiles', 'Tiles'), ('slate', 'Slate'), ('other', 'Others')], max_length=125, verbose_name='What is the main material of the interior walls of your kitchen?')),
                ('material_exterior_wall_kitchen', models.CharField(choices=[('no_walls', 'No walls'), ('mud', 'Mud'), ('wood', 'Wood'), ('cement_concrete', 'Cement/concrete'), ('stone', 'Stone'), ('metal', 'Metal'), ('other', 'Others')], max_length=125, verbose_name='What is the main material of the exterior walls of your kitchen?')),
                ('kitchen_swept', models.CharField(choices=[('daily', 'Daily'), ('two_day_week', 'Two days a week'), ('three_day_week', 'Three days a week'), ('four_day_week', 'Four days a week'), ('five_day_week', 'Five days a week '), ('six_day_week', 'Six days a week'), ('weekly', 'Weekly (i.e., once in 7 days)'), ('monthly', 'Monthly (Once a month)'), ('never', 'Never')], max_length=125, verbose_name='How often is the inside of the kitchen swept?')),
                ('no_kitchen_window', models.IntegerField(verbose_name='How many windows in the kitchen open to outside the house?')),
                ('no_kitchen_door', models.IntegerField(verbose_name='How many doors in the kitchen open to outside the house?')),
                ('kitchen_chimney', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=15, verbose_name='Does the kitchen have a chimney?')),
            ],
            options={
                'verbose_name': 'House Kitchen Surrounding',
                'verbose_name_plural': 'House Kitchen Surrounding',
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
                'default_permissions': ('add', 'change', 'delete', 'view', 'export', 'import'),
            },
        ),
    ]
