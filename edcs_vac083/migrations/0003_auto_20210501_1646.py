# Generated by Django 3.1.7 on 2021-05-01 16:46

import _socket
from django.db import migrations, models
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_revision.revision_field


class Migration(migrations.Migration):

    dependencies = [
        ('edcs_vac083', '0002_auto_20210430_1013'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salutation', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('headshot', models.ImageField(upload_to='author_headshots')),
            ],
        ),
        migrations.CreateModel(
            name='ExclusionCriteria',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_initials', models.CharField(max_length=3)),
                ('subject_id', models.CharField(max_length=9)),
                ('visit_date', models.DateField()),
                ('visit_code', models.CharField(choices=[('1', 'sc1')], max_length=1)),
                ('products', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Use of immunoglobulins or blood products (e.g., blood transfusion) at any time in the past', max_length=1)),
                ('vaccine14', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Receipt of any vaccine in the 14 days preceding enrolment, or planned receipt of any                                            other vaccine within 14 days following each vaccination', max_length=1)),
                ('vaccine30', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Receipt of an investigational product in the 30 days preceding enrolment, or planned receipt during the study period', max_length=1)),
                ('concurrent', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Concurrent involvement in another clinical trial or planned involvement during the study period', max_length=1)),
                ('interpretation', models.CharField(choices=[('1', 'Yes'), ('2', 'No'), ('3', 'NA')], help_text='Prior receipt of an investigational vaccine likely to impact on interpretation of the trial data, as assessed by the Investigator', max_length=1)),
                ('confirmed', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Any confirmed or suspected immunosuppressive or immunodeficient state,including HIV infection; asplenia; recurrent, severe infections and chronic (more than 14 days immunosuppressant medication within the past 6 months (inhaled and topical steroids are allowed).', max_length=1)),
                ('allergic', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='History of allergic disease or reactions likely to be exacerbated by anycomponent of the vaccine (e.g. egg products)', max_length=1)),
                ('anaphylaxis', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Any history of anaphylaxis in reaction to vaccinations', max_length=1)),
                ('pregnant', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Pregnancy, lactation or intention to become pregnant during the study', max_length=1)),
                ('cancer', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='History of cancer (except basal cell carcinoma of the skin and cervicalCarcinoma in situ).', max_length=1)),
                ('psychiatric', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='History of serious psychiatric condition that may affect participation in the Study.', max_length=1)),
                ('chronic', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Any other serious chronic illness requiring hospital specialist supervision', max_length=1)),
                ('injecting', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Suspected or known injecting drug abuse in the 5 years preceding enrolment', max_length=1)),
                ('surface', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Seropositive for hepatitis B surface antigen (HBsAg) or hepatitis C (HCV IgG).', max_length=1)),
                ('volunteers', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Volunteers unable to be closely followed for social, geographic or psychological reasons.', max_length=1)),
                ('clinically', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Any clinically significant abnormal finding on biochemistry or hematology blood tests,urinalysis or clinical examination. In the event of clinically significant abnormal test results, confirmatory repeat tests will be requested. Procedures for identifying laboratory values meeting exclusion criteria will be described in a study specific SOP.', max_length=1)),
                ('disease', models.CharField(choices=[('1', 'Yes'), ('2', 'No'), ('3', 'NA')], help_text='Any other significant disease, disorder, or finding which may significantly increase the risk to the volunteer because of participation in the study, affect the ability of the volunteer to participate in the study or impair interpretation of the study data.', max_length=1)),
                ('enrolled', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Can the participant be enrolled in the study?', max_length=1)),
                ('reason', models.CharField(choices=[('1', 'Eligibility criteria not fulfilled'), ('2', 'Consent withdrawal / not willing to participate'), ('3', 'Migrated / moved from the study area'), ('4', 'Other (please specify):')], help_text='*If No, specify the reason for screening failure (Tick one box only)', max_length=1)),
                ('clinician_initials', models.CharField(help_text='Clinician Initials:', max_length=3)),
                ('coordinator_time', models.TimeField()),
                ('pi_initials', models.CharField(help_text='PI /designee', max_length=3)),
                ('reviewer_time', models.TimeField()),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('address', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=60)),
                ('state_province', models.CharField(max_length=30)),
                ('country', models.CharField(max_length=50)),
                ('website', models.URLField()),
            ],
            options={
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='ScreeningTwo',
            fields=[
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('created', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('modified', models.DateTimeField(blank=True, default=django_audit_fields.models.audit_model_mixin.utcnow)),
                ('user_created', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', django_audit_fields.fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', django_audit_fields.fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', django_audit_fields.fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_initials', models.CharField(max_length=3)),
                ('subject_id', models.CharField(max_length=9)),
                ('visitOccur', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], max_length=1)),
                ('visit_date', models.DateField()),
                ('results', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Did you inform the participant about their results?', max_length=1)),
                ('health', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Has there been change in participant’s health status since last visit?', max_length=1)),
                ('medication', models.CharField(choices=[('1', 'Yes'), ('2', 'No')], help_text='Is the participant currently taking new medications not previously noted?', max_length=1)),
                ('sample', models.CharField(choices=[('1', 'Yes'), ('2', 'No'), ('3', 'NA')], help_text='Were all requested sample collected?', max_length=1)),
                ('sampleNumber', models.IntegerField(help_text='Sample Brady Number')),
                ('coordinator_initials', models.CharField(max_length=3)),
                ('coordinator_time', models.TimeField()),
                ('reviewer_initials', models.CharField(max_length=3)),
                ('reviewer_time', models.TimeField()),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.AlterField(
            model_name='demographic',
            name='gender',
            field=models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1),
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('publication_date', models.DateField()),
                ('authors', models.ManyToManyField(to='edcs_vac083.Author')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edcs_vac083.publisher')),
            ],
        ),
    ]
